[project]
name = "claude-code-orchestrator"
version = "0.1.0"
description = "Claude Orchestrator - Opus Manager with Sonnet Workers for parallel task processing"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "jsonschema>=4.0.0",
    "PyYAML>=6.0",
    "rich>=10.0.0",
    "pydantic>=2.0.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0"
]

[project.scripts]
claude-orchestrator = "claude_orchestrator:main"
cco = "claude_orchestrator:main"
co = "claude_orchestrator:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-timeout>=2.1.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "black>=23.0.0",
    "coverage[toml]>=7.0.0"
]

[tool.ruff]
line-length = 120
target-version = "py310"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.black]
line-length = 120
target-version = ['py310']

[tool.coverage.run]
source = ["claude_orchestrator"]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
